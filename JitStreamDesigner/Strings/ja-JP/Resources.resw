<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Just-in-time stream modeling designer</value>
  </data>
  <data name="Start-Quickhelp" xml:space="preserve">
    <value>開始するには、スタディーフォルダを選択してください</value>
  </data>
  <data name="Start-Welcome" xml:space="preserve">
    <value>(c) {1} Jit Stream Designer Version {0} all rights reserved.</value>
  </data>
  <data name="LabelTemplateMode.Text" xml:space="preserve">
    <value>「テンプレート」デザインモード</value>
  </data>
  <data name="LabelOpen.Text" xml:space="preserve">
    <value>スタディファイルを開く</value>
  </data>
  <data name="LabelStageMode.Text" xml:space="preserve">
    <value>「ステージ」モデリングモード</value>
  </data>
  <data name="ButtonTemplateMode.ToolTipService.ToolTip" xml:space="preserve">
    <value>テンプレートデザインモード</value>
  </data>
  <data name="ButtonStageMode.ToolTipService.ToolTip" xml:space="preserve">
    <value>ステージモデリングモード</value>
  </data>
  <data name="TemplateList.Header" xml:space="preserve">
    <value>  Jit Stream テンプレート一覧</value>
  </data>
  <data name="ClockStart.ToolTipService.ToolTip" xml:space="preserve">
    <value>[F] クロック開始/停止</value>
  </data>
  <data name="OpenLogText.Text" xml:space="preserve">
    <value>ログファイルを開く</value>
  </data>
  <data name="OpenStudy.Text" xml:space="preserve">
    <value>スタディを開く [Ctrl+O]</value>
  </data>
  <data name="OpenStudyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>スタディを開く [Ctrl+O]</value>
  </data>
  <data name="PartsToolButtonKanban" xml:space="preserve">
    <value>かんばん</value>
    <comment>Toobutton tooltip message</comment>
  </data>
  <data name="PartsToolButtonProcess" xml:space="preserve">
    <value>プロセス</value>
    <comment>Toobutton tooltip message</comment>
  </data>
  <data name="PartsToolButtonProcessPriorityJoin" xml:space="preserve">
    <value>プロセス(優先選択機能付き）</value>
    <comment>Toobutton tooltip message</comment>
  </data>
  <data name="PartsToolButtonWork" xml:space="preserve">
    <value>ワーク</value>
    <comment>Toobutton tooltip message</comment>
  </data>
  <data name="ButtonAddTemplate.Content" xml:space="preserve">
    <value>＋テンプレート追加</value>
  </data>
  <data name="TemplateDialog.Title" xml:space="preserve">
    <value>新規テンプレート</value>
  </data>
  <data name="TemplateDialog.PrimaryButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="TemplateDialog.SecondaryButtonText" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="FeatureJitTemplatePanel-CannotUndo" xml:space="preserve">
    <value>テンプレート作成はUNDOができません</value>
  </data>
  <data name="RedoButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>やり直し    [Ctrl+Y]</value>
  </data>
  <data name="UndoButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>元に戻す    [Ctrl+Z]</value>
  </data>
  <data name="FeatureUndoRedo-NoRedo" xml:space="preserve">
    <value>これ以上 進めません...</value>
  </data>
  <data name="FeatureUndoRedo-NoUndo" xml:space="preserve">
    <value>これ以上 戻れません...</value>
  </data>
  <data name="SaveStudyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>スタディを保存 [Ctrl+S]</value>
  </data>
  <data name="LabelSave.Text" xml:space="preserve">
    <value>スタディファイルを保存</value>
  </data>
  <data name="FeatureSaveStudy-SaveCompletely" xml:space="preserve">
    <value>"{0}" に保存しました。  パス = {1}</value>
  </data>
  <data name="FeatureOpenStudy-LoadCompletely" xml:space="preserve">
    <value>"{0}" をロードしました。  パス = {1}</value>
  </data>
  <data name="InstanceNameError.Text" xml:space="preserve">
    <value>次の文字だけで入力してください: A-Z, a-z, 0-9 </value>
  </data>
  <data name="InstanceTimeSpanError.Text" xml:space="preserve">
    <value>時間形式 : 1.23 + 単位(H/M/S/MS/D/W)</value>
  </data>
  <data name="CioAddButton.Content" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="DescriptionCiDelay.Text" xml:space="preserve">
    <value>ワーク退出までの滞留時間を指定する制約</value>
  </data>
  <data name="DescriptionCiKanbanReturn.Text" xml:space="preserve">
    <value>ワーク侵入時に かんばん を 返却する</value>
  </data>
  <data name="DescriptionCiPickTo.Text" xml:space="preserve">
    <value>ワーク侵入時に 子ワークを 指定プロセスに送る</value>
  </data>
  <data name="DescriptionCiSwitchNextLink.Text" xml:space="preserve">
    <value>次のプッシュプロセスを切り替える</value>
  </data>
  <data name="DescriptionCoJoinFrom.Text" xml:space="preserve">
    <value>横工程にワークが発生するまで、前工程のOUTを抑制。INできる時には前工程からのワーク内に横工程のワークを子ワークとして結合。</value>
  </data>
  <data name="DescriptionCoMaxCost.Text" xml:space="preserve">
    <value>自工程の最大コストを評価して、前工程のOUTを抑制。</value>
  </data>
  <data name="DescriptionCoSpan.Text" xml:space="preserve">
    <value>自工程にワークが入る最小間隔を指定する</value>
  </data>
</root>